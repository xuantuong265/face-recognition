# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dashboard.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector

from attendance import Attendance


class DashBoard(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(270, 40, 741, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(100, 140, 601, 301))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()

        self.tableWidget.cellClicked.connect(self.selectItemTable)

        self.tableWidget.setHorizontalHeaderItem(0, item)
        self.tableWidget.setColumnWidth(0, 400)
        item = QtWidgets.QTableWidgetItem()

        self.tableWidget.setHorizontalHeaderItem(1, item)
        self.tableWidget.setColumnWidth(1, 200)
        MainWindow.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 31))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


        #init
        self.loadData()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Danh sách các môn học"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Action"))


    #load data
    def loadData(self):

        #connect db
        db = mysql.connector.connect(user='root', password='', host='localhost', database='opencv')
        cursor = db.cursor()

        query = ("SELECT * FROM `subject`")
        cursor.execute(query)

        #set data
        self.tableWidget.setRowCount(7)
        row = 0

        for data in cursor:
            self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(data[1]))
            row = row + 1

        cursor.close()
        db.close()

    def selectItemTable(self, row, column):
        item = self.tableWidget.item(row, column)

        name = item.tableWidget().item(row, column).text()
        ID = self.getIDSubJect(name)

        #switch screem
        self.window = QtWidgets.QMainWindow()
        self.ui = Attendance()
        self.ui.setupUi(self.window, ID)
        self.window.show()


    def getIDSubJect(self, name):
        # connect db
        db = mysql.connector.connect(user='root', password='', host='localhost', database='opencv')
        cursor = db.cursor()

        query = "SELECT * FROM `subject` WHERE name = '"+str(name)+"' "

        cursor.execute(query, name)

        for row in cursor:
            return row[0]

        db.close()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = DashBoard()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
